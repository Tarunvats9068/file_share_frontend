{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\file-share-main\\\\file-share-main\\\\src\\\\components\\\\Download.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport download from \"downloadjs\"; // package to trigger file downloads on the clientside\nimport \"../stylesheets/download.css\";\n\n// configure the baseURL to be either the localhost or the deployed URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\nlet frontURL = \"\";\nif (baseURL === \"http://localhost:5000\") {\n  frontURL = \"http://localhost:3000\";\n}\n\n// component to handle file downloads after user clicks on the shareable link\nconst Download = props => {\n  _s();\n  // trigger the file download after the component has mounted\n  useEffect(() => {\n    // fetch the _id of the File(from DB) from the params\n    const id = props.match.params.id;\n\n    // Get the data for the correct file object using the id\n    axios.get(`${baseURL}/api/file/${id}`).then(file => {\n      const downloadFile = file.data; // the buffer array that holds the content of the file\n\n      // invoke the download function to download the file\n      download(Uint8Array.from(downloadFile.data.Body.data).buffer,\n      // convert the buffer array to uint8array, to be compliant with the downloadjs function property type\n      downloadFile.file.file_name,\n      // name of the file to be downloaded, is set to the original file name stored in the DB\n      downloadFile.file.file_mimetype // the valid mime type of the file to be downloaded\n      );\n    }).then(() =>\n    // wait for a second to finish file download, and then redirect to the home page of the application\n    window.setTimeout(() => {\n      window.location.replace(frontURL || baseURL);\n    }, 1000)).catch(err => {\n      if (err.message) {\n        alert(\"No such file is available in the server!\");\n        window.location.replace(baseURL || frontURL);\n      } else {\n        console.log(JSON.stringify(err));\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"prompt\",\n    children: \"Downloading the file...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this); // display a message while the file download starts\n};\n_s(Download, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Download;\nexport default Download;\nvar _c;\n$RefreshReg$(_c, \"Download\");","map":{"version":3,"names":["React","useEffect","axios","download","jsxDEV","_jsxDEV","baseURL","process","env","REACT_APP_BASEURL","frontURL","Download","props","_s","id","match","params","get","then","file","downloadFile","data","Uint8Array","from","Body","buffer","file_name","file_mimetype","window","setTimeout","location","replace","catch","err","message","alert","console","log","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/file-share-main/file-share-main/src/components/Download.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport download from \"downloadjs\"; // package to trigger file downloads on the clientside\nimport \"../stylesheets/download.css\";\n\n// configure the baseURL to be either the localhost or the deployed URL\nconst baseURL = process.env.REACT_APP_BASEURL || \"http://localhost:5000\";\nlet frontURL = \"\";\nif (baseURL === \"http://localhost:5000\") {\n    frontURL = \"http://localhost:3000\";\n}\n\n// component to handle file downloads after user clicks on the shareable link\nconst Download = (props) => {\n    // trigger the file download after the component has mounted\n    useEffect(() => {\n        // fetch the _id of the File(from DB) from the params\n        const id = props.match.params.id;\n\n        // Get the data for the correct file object using the id\n        axios\n            .get(`${baseURL}/api/file/${id}`)\n            .then((file) => {\n                const downloadFile = file.data; // the buffer array that holds the content of the file\n\n                // invoke the download function to download the file\n                download(\n                    Uint8Array.from(downloadFile.data.Body.data).buffer, // convert the buffer array to uint8array, to be compliant with the downloadjs function property type\n                    downloadFile.file.file_name, // name of the file to be downloaded, is set to the original file name stored in the DB\n                    downloadFile.file.file_mimetype // the valid mime type of the file to be downloaded\n                );\n            })\n            .then(() =>\n                // wait for a second to finish file download, and then redirect to the home page of the application\n                window.setTimeout(() => {\n                    window.location.replace(frontURL || baseURL);\n                }, 1000)\n            )\n            .catch((err) => {\n                if (err.message) {\n                    alert(\"No such file is available in the server!\");\n                    window.location.replace(baseURL || frontURL);\n                } else {\n                    console.log(JSON.stringify(err));\n                }\n            });\n    }, []);\n    return <p className=\"prompt\">Downloading the file...</p>; // display a message while the file download starts\n};\n\nexport default Download;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAO,6BAA6B;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AACxE,IAAIC,QAAQ,GAAG,EAAE;AACjB,IAAIJ,OAAO,KAAK,uBAAuB,EAAE;EACrCI,QAAQ,GAAG,uBAAuB;AACtC;;AAEA;AACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB;EACAZ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,EAAE,GAAGF,KAAK,CAACG,KAAK,CAACC,MAAM,CAACF,EAAE;;IAEhC;IACAZ,KAAK,CACAe,GAAG,CAAE,GAAEX,OAAQ,aAAYQ,EAAG,EAAC,CAAC,CAChCI,IAAI,CAAEC,IAAI,IAAK;MACZ,MAAMC,YAAY,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC;;MAEhC;MACAlB,QAAQ,CACJmB,UAAU,CAACC,IAAI,CAACH,YAAY,CAACC,IAAI,CAACG,IAAI,CAACH,IAAI,CAAC,CAACI,MAAM;MAAE;MACrDL,YAAY,CAACD,IAAI,CAACO,SAAS;MAAE;MAC7BN,YAAY,CAACD,IAAI,CAACQ,aAAa,CAAC;MAAA,CACnC;IACL,CAAC,CAAC,CACDT,IAAI,CAAC;IACF;IACAU,MAAM,CAACC,UAAU,CAAC,MAAM;MACpBD,MAAM,CAACE,QAAQ,CAACC,OAAO,CAACrB,QAAQ,IAAIJ,OAAO,CAAC;IAChD,CAAC,EAAE,IAAI,CAAC,CACX,CACA0B,KAAK,CAAEC,GAAG,IAAK;MACZ,IAAIA,GAAG,CAACC,OAAO,EAAE;QACbC,KAAK,CAAC,0CAA0C,CAAC;QACjDP,MAAM,CAACE,QAAQ,CAACC,OAAO,CAACzB,OAAO,IAAII,QAAQ,CAAC;MAChD,CAAC,MAAM;QACH0B,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC,CAAC;MACpC;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN,oBAAO5B,OAAA;IAAGmC,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAAC;EAAuB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC,CAAC;AAC9D,CAAC;AAAChC,EAAA,CAnCIF,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}